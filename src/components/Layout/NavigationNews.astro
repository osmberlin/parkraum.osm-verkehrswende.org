---
import clsx from 'clsx'

const allPosts = await Astro.glob('../../pages/posts/*.{md,mdx}')
const sortedPosts = allPosts.sort(
  (postA, postB) =>
    new Date(postB.frontmatter.date).valueOf() - new Date(postA.frontmatter.date).valueOf()
)
const relevantPosts = sortedPosts.filter((p) => p.frontmatter.inMenu === true)

export type Props = { menuHighlight?: string | undefined }

const { menuHighlight } = Astro.props
const pathname = new URL(Astro.request.url).pathname
---

<h2 class="my-2 text-xl font-semibold">
  <a href="/posts" class={clsx({ 'hover:text-blue-500': menuHighlight !== 'posts' }, 'text-black')}>
    Neuigkeiten <span class="text-gray-500">({relevantPosts.length})</span>
  </a>
</h2>
<div class="mb-7 flex flex-col overflow-hidden rounded border border-b-0 border-gray-200">
  {
    relevantPosts.map((post) => {
      return (
        <a
          href={post.url}
          class={clsx(
            pathname == post.url ? 'menu-active' : 'hover:bg-blue-50',
            'flex items-center border-b border-gray-200 py-2 pl-4 leading-tight'
          )}
        >
          <span class="mr-1 -ml-1.5 inline-flex rounded-full bg-gray-100 px-1.5 py-0.5 text-xs text-gray-500">
            {[
              new Date(post.frontmatter.date).getFullYear(),
              new Date(post.frontmatter.date).toLocaleDateString([], { month: '2-digit' }),
            ].join('/')}
          </span>
          {post.frontmatter.menuTitle}
        </a>
      )
    })
  }
</div>
